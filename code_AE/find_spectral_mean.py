import SoundDatasets
import numpy as np
import torch
import matplotlib.pyplot as plt

mean = torch.zeros(128)
trainset = SoundDatasets.ReverbLMBEsDataset(train=True)
num_samples = 10#len(trainset)

for sample in range(num_samples):
    print(f'{sample/num_samples*100:.1f}%', end='\r')
    lmbe = trainset[sample]
    for t in range(312):
        mean = torch.add(mean, lmbe[0, :, t])

mean = torch.div(mean, num_samples*312)

print(mean)
img = mean.repeat(312,1).transpose(0,1)

plt.imshow(img, aspect='auto', origin='lower')
plt.show()


'''
[0.5866, 0.5835, 0.5796, 0.5871, 0.5975, 0.6065, 0.6209, 0.6352, 0.6463,
0.6571, 0.6708, 0.6830, 0.6974, 0.6967, 0.6881, 0.6796, 0.6699, 0.6688,
0.6667, 0.6632, 0.6701, 0.6812, 0.6760, 0.6843, 0.6828, 0.6773, 0.6789,
0.6683, 0.6683, 0.6582, 0.6514, 0.6454, 0.6339, 0.6255, 0.6178, 0.6080,
0.6046, 0.6014, 0.5979, 0.5937, 0.5898, 0.5860, 0.5840, 0.5818, 0.5795,
0.5777, 0.5764, 0.5749, 0.5743, 0.5728, 0.5700, 0.5722, 0.5680, 0.5679,
0.5640, 0.5655, 0.5631, 0.5642, 0.5676, 0.5701, 0.5722, 0.5742, 0.5748,
0.5735, 0.5712, 0.5684, 0.5666, 0.5630, 0.5607, 0.5588, 0.5541, 0.5538,
0.5513, 0.5509, 0.5515, 0.5526, 0.5529, 0.5533, 0.5512, 0.5485, 0.5442,
0.5395, 0.5357, 0.5319, 0.5307, 0.5293, 0.5287, 0.5275, 0.5270, 0.5263,
0.5251, 0.5236, 0.5230, 0.5207, 0.5192, 0.5175, 0.5150, 0.5122, 0.5089,
0.5055, 0.5021, 0.4991, 0.4957, 0.4917, 0.4865, 0.4814, 0.4759, 0.4705,
0.4656, 0.4605, 0.4554, 0.4486, 0.4414, 0.4347, 0.4307, 0.4289, 0.4278,
0.4269, 0.4235, 0.4195, 0.4178, 0.4193, 0.4203, 0.4194, 0.4170, 0.4105,
0.3831, 0.2974]
'''


bn_mean = torch.Tensor([ 2.7051e-02, -2.8536e-03,  1.9625e-02,  1.7383e-02, -1.3945e-01,
        -3.4586e-02,  2.1709e-02, -7.9845e-03, -7.9713e-03,  9.2617e-03,
         2.9880e-03,  1.2129e-01, -8.5280e-02,  7.6092e-03,  5.6993e-03,
        -2.8386e-02,  6.4024e-02,  9.8434e-03, -1.8892e-01,  4.5146e-02,
        -6.8049e-03, -1.2315e-02,  6.1222e-03, -3.3932e-03, -2.9997e-02,
        -2.2170e-01, -2.4133e-03,  1.8019e-02, -1.4559e-02, -3.0380e-04,
        -7.2043e-04,  1.2676e-02, -4.0309e-02,  1.2052e-01, -1.6179e-02,
        -5.6163e-03,  1.5626e-03,  2.4812e-03, -1.6393e-02,  2.6045e-02,
        -4.6903e-02, -2.7690e-02, -3.8688e-03, -3.2359e-02,  6.5171e-02,
         2.4620e-02,  2.1692e-02, -5.0557e-03,  2.8029e-03, -2.3986e-02,
        -3.4645e-02, -7.5015e-03,  1.7667e-01, -3.6425e-02, -1.7750e-01,
        -4.9528e-02,  7.8251e-02, -5.5421e-03,  5.4322e-03,  1.7981e-02,
        -6.9502e-03, -5.8347e-02, -8.7135e-03, -1.5767e-01, -1.1897e-01,
        -1.7880e-02, -3.0731e-02, -1.4015e-02, -2.1009e-01,  1.4801e-02,
        -8.3386e-02, -1.1898e-02, -2.1392e-01,  1.6617e-02,  1.0901e-01,
        -1.8172e-01, -3.1072e-02, -8.7464e-02,  1.8131e-01,  1.2226e-03,
         3.6990e-02,  1.1599e-02,  2.2839e-01, -1.1136e-01,  2.0191e-02,
        -1.0024e-02, -1.9491e-03,  9.4981e-03,  7.7153e-02, -1.3320e-02,
        -5.5527e-02, -9.3247e-03,  5.8534e-03,  2.1460e-01,  9.3070e-02,
        -1.8365e-01, -1.2384e-02,  2.7553e-02,  5.6768e-03, -4.1539e-03,
         2.3984e-02, -3.1550e-02, -1.6689e-02, -6.7109e-03, -1.4432e-02,
         5.9935e-03, -1.0680e-02,  1.6741e-01, -2.3864e-03,  1.8272e-03,
         1.9057e-02, -4.4538e-03,  3.0839e-02, -1.0476e-01, -1.3172e-02,
         1.5188e-01,  6.3314e-02, -9.0711e-02,  3.5250e-03,  2.7001e-02,
         3.2051e-01,  1.4564e-02,  1.6399e-01,  7.9595e-02, -1.5508e-01,
        -3.0282e-02, -1.1636e-02, -7.1666e-03, -3.0140e-01,  4.0750e-03,
        -2.8913e-02,  2.2414e-01,  4.8222e-03, -1.7185e-01,  1.9201e-01,
        -1.3691e-02,  7.8852e-04,  1.0864e-02, -4.0057e-03,  7.6528e-02,
        -1.6730e-02,  1.0789e-02,  1.7306e-01, -8.4566e-03, -2.3893e-02,
         1.5911e-02,  7.7161e-03,  4.1436e-02, -1.8966e-03, -7.5114e-02,
         1.0647e-02,  6.5908e-03, -2.9118e-02, -8.5601e-03, -5.9878e-03,
         4.0102e-03, -1.6794e-01,  1.9441e-02,  2.6888e-02, -2.0065e-01,
         1.1583e-02, -1.5684e-02, -6.3149e-02,  2.1778e-03, -2.2568e-01,
        -1.2932e-02,  2.4748e-03,  2.9554e-02, -1.5034e-01,  1.8898e-03,
        -2.9382e-03,  4.1980e-03,  2.2252e-03, -2.0478e-01, -1.2613e-02,
         6.8490e-03, -7.5096e-03, -2.5604e-01,  1.1185e-03,  6.6747e-03,
         7.8902e-03, -3.7890e-02,  6.7275e-02,  9.0098e-03,  2.2744e-03,
        -1.2823e-03,  1.2657e-02,  1.1006e-02, -8.4951e-03,  1.6968e-02,
         4.4795e-02, -8.4043e-03, -1.9560e-01, -1.1664e-01, -4.6481e-02,
        -1.0879e-03,  8.3748e-03,  2.9218e-02,  1.5895e-01,  2.7522e-01,
         3.2873e-03, -1.9932e-03,  1.0928e-01, -2.8083e-02, -3.9232e-02,
        -1.4333e-01, -2.4249e-01,  1.0548e-01,  3.9166e-02, -1.3136e-02,
         1.8653e-01, -1.9561e-02,  4.2153e-02,  6.7414e-02,  4.8979e-03,
        -9.8218e-02,  1.0520e-02, -3.3477e-02,  1.1037e-02, -6.3482e-03,
         5.9371e-03, -9.2946e-02, -6.6182e-02,  8.7030e-03,  1.3307e-01,
         2.3567e-02,  1.3982e-03,  2.0842e-03, -1.0809e-02,  9.3479e-03,
         1.0360e-01, -2.5065e-02,  1.5832e-02,  2.6984e-02, -3.5546e-03,
        -1.6781e-01, -6.3069e-03, -1.3155e-02,  2.2429e-01,  3.2436e-03,
         6.5995e-02,  1.1206e-02, -4.0188e-02,  2.8716e-03,  9.6269e-02,
        -3.8879e-03,  2.6251e-01,  1.4921e-01, -2.9530e-03,  3.4949e-03,
        -8.1927e-03, -1.7504e-02, -5.7059e-02,  1.5001e-01, -1.3296e-02,
         6.6441e-03, -7.0350e-03, -1.1559e-01, -1.7406e-02,  1.5170e-01,
        -7.3386e-03, -4.2345e-02, -3.0888e-02,  1.5404e-01, -2.5520e-03,
         9.5121e-03, -1.4553e-02,  8.1518e-04, -1.7187e-02,  7.9354e-02,
        -7.0272e-04,  5.8837e-03,  1.5346e-03, -2.5343e-02, -2.3279e-02,
         6.4259e-02,  1.5323e-02,  1.7492e-02, -1.2906e-02,  6.5345e-03])


img = bn_mean.repeat(300,1).transpose(0,1)

plt.imshow(img, aspect='auto', origin='lower')
plt.show()